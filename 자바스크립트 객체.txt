자바스크립트 객체

자바스크립트에는 여덟가지 자료형이 있다.
이 중 일곱개는 오직 하나의 데이터(문자열, 숫자 등)만 담을 수 있어 '원시형(primitive type)'이라 부른다.
이와 달리 객체형은 다양한 데이터를 담을 수 있다. 키로 구분된 데이터 집합이나 복잡한 개체(entity)를 저장할 수 있다.
객체는 중괄호 {}를 이용해 만들 수 있으며 중괄호 안에는 '키(key): 값(value)' 쌍으로 구성된 프로퍼티(property)를 
여러게 넣을 수 있는데, 키엔 문자형, 값엔 모든 자료형이 허용된다. 프로퍼티 키는 '프로퍼티 이름'이라고도 부른다.

1) 상수형
자바스크립트에서 const는 상수형으로 취급된다.
const로 만들어진 객체는 값을 고정하지만 그 내용은 고정하지 않는다.

const user = {
  name: "John"
};

user.name = "Sina"; // (*)

alert(user.name); // Sina

이렇게 값이 있을 경우 user 자체를 바꾸는 것은 안되지만 user안에 있는 name이라는 프로퍼티 값은 수정이 가능하다.

2) 대괄호 표기법

let user = {
 name: "UnderTaker",
 loves cat: true
}

user.name //UnderTaker

객체안의 프로퍼티 값은 점표기법으로 읽을 수 있다.
하지만 프로퍼티 이름에 공백이 있을 경우 점 표기법으로는 해당 코드를 읽을 수 없다.
이 경우엔 대괄호 표기법인 user["loves cat"] 을 통해 읽어올 수 있다.
특히나 대괄호 표기법 안에서 문자열을 사용할 땐 문자열을 따옴표로 묶어줘야한다.

let user = {
  name: "John",
  age: 30
};

let key = prompt("사용자의 어떤 정보를 얻고 싶으신가요?", "name");

// 변수로 접근
alert( user[key] ); // John (프롬프트 창에 "name"을 입력한 경우)

위 코드에서 key 변수는 런타임시점에 값이 정해진다. 
이경우 prompt 창에 user가 가지고 있는 프로퍼티 이름을 입력하게 된다면 대괄호 표기에 의해 해당 키값으로 값을 가져올 수 있다.

하지만 점표기법의 경우에는 대괄호 표기법처럼 사용이 불가능하다.

let user = {
  name: "John",
  age: 30
};

let key = "name";
alert( user.key ) // undefined

만약 위와 같이 코드를 구성하고 실행했을 경우 user.key는 undefined가 뜨게 된다.
이처럼 변수 key의 값을 사용하기 위해선 대괄호표기법을 사용해야한다.

객체를 만들 때 객체 리터럴 안의 프로퍼티 키가 대괄호로 둘러싸여 있는 경우, 이를 계산된 프로퍼티라고 한다.

let fruit = prompt("어떤 과일을 구매하시겠습니까?", "apple");

let bag = {
  [fruit]: 5, // 변수 fruit에서 프로퍼티 이름을 동적으로 받아 옵니다.
};

alert( bag.apple );

이처럼 bag객체 리터럴 안에서 외부에 있는 fruit라는 변수의 값을 대괄호로 [fruit] 받아 올 수 있다.
