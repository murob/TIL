(자바스크립트) 함수 선언문 vs 함수 표현식

두 함수의 가장 큰 차이는 자바스크립트 엔진이 언제 함수를 생성하는지에 있다.
함수 표현식은 실제 실행 흐름이 해당 함수에 도달했을 떄 함수를 생성한다. 
따라서 실행 흐름이 함수에 도달했을 때부터 해당 함수를 사용할 수 있다.

반면, 함수 선언문은 함수 선언문이 정의되기 전에도 호출할 수 있다.
그이유는 자바스크립트의 내부 알고리즘 때문이다. 자바스크립트는 스크립트를
실행하기 전, 준비단계에서 전역에 선언된 함수 선언문을 찾고, 해당 함수를 생성한다.
스크립트가 진짜 실행되기 전 "초기화 단계"에서 함수 선언 방식으로 정의한 함수가 생성되는 것이다.

스크립트는 함수 선언문이 모두 처리된 이후에서야 실행된다. 따라서 스크립트 어디서든 함수 선언문으로
선언한 함수에 접근할 수 있는 것이다.

예시)
<함수 선언문>
sayName("Murob!");

function sayName(name){
	alert(`내 이름은 ${name} 이야`);
}

<함수 표현식>
sayName("Murob!"); --- ReferenceError: sayName is not defined

let sayName = function(name) {
	alert(`내이름은 ${name} 이야);
}

정리하자면 함수 선언문으로 정의할 경우 자바스크립트 내부 알고리즘 특성상 실행전단계에 함수가 생성돼서 함수문 위에서도 호출이 가능하다.
함수 표현식의 경우 실행 흐름이 도달했을 때 해당 함수를 사용할 수 있으므로 함수 정의 전에 호출은 참조에러가 발생한다.