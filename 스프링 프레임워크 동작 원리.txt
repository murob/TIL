<스프링 프레임워크 동작 원리>
1) web.xml
2) applicationContext.xml (루트 컨테이너) -> 스프링 컨테이너 설정 파일(부모)
3) servlet-context.xml (서블릿 컨텍스트, Handler Mapping) -> 스프링 컨테이너 설정 파일(자식)

1) web.xml
web.xml은 배포 서술자라고 하며 WAS(톰켓) 가동시 WEB-INF 하위에 있는 web.xml을 읽고, 웹 어플리케이션 설정을
구성한다. 스프링 프레임워크를 사용하지 않고 서블릿 컨테이너로 요청/응답 처리를 처리할 때는 web.xml에
서블릿 객체를 작성해두고 들어오는 요청 URL에 따라 서블릿 객체를 생성하거나 이미 만들어져 있을 경우 
메모리에 저장되어 있는 서블릿 객체를 호출하여 재사용 했다.
스프링 프레임워크에서는 FrontController(DispatcherServlet) 개념이 도입되어 모든 요청을 하나의 정해진
서블릿으로 받아서 다른 서블릿으로 매핑처리를 수행한다. web.xml에 모든 서블릿을 작성하는 것이 아닌 
DispatcherServlet이라는 서블릿을 작성해서 모든 요청을 DispatecherServlet으로 받고 DispatcherServlet
설정파일에 설정해둔 서블릿에 매핑되어 처리된다.

DispatcherServlet을 사용함에 따라 web.xml의 역할이 줄어들었다. URL요청을 처리하기  위해 모든 서블릿을
web.xml에 등록할 필요가 없어졌기 때문이다.
그럼에도 web.xml의 역할은 중요하다. 모든 URL 요청을 받기 위한 DispatcherServlet을 서블릿으로 등록해줘야하며
<filter>나 <listener> 설정하는 역할 또한 web.xml의 역할이기 때문이다.
